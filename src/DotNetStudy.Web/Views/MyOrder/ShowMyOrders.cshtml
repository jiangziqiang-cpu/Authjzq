
@{
    ViewData["Title"] = "ShowMyOrders";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model DotNetStudy.Web.ViewModels.MyOrdersModels.ShowMyOrdersModels
@using DotNetStudy.Web.ViewModels.MyOrdersModels

<h3>我的订单</h3>
<a href="/Account/UserProfile" class="btn btn-primary">用户详情</a>
<table class="table table-striped">
    <tr>
        <td>用户Id：</td>
        <td>订单编号：</td>
        <td>商品总价：</td>
        <td>支付状态：</td>
        <td>查看详情:</td>
        <td colspan="2">操作 </td>
    </tr>

    @foreach (var item in Model.Orders)
    {
        <tr>

            <td>@item.UserId</td>
            <td>@item.OrderNo </td>
            <td>@item.Amount</td>
            <td>@item.OrderStatus.GetDescription()</td>
            <td><a href="/MyOrderDetails/MyOrderDetail/@item.Id">查看详情</a></td>
            <td>
                <form action="/MyOrder/CancelOfOrder" method="post">
                    <input type="hidden" name="OrderId" value="@item.Id" />

                    @if ((Int32)item.OrderStatus ==0)
                    {
                        <button type="submit" class="btn btn-primary">取消订单</button>
                    }
                </form>
            </td>
            <td>
                @if ((Int32)item.OrderStatus == 0)
                {
                    <a href="/MyOrder/PayOrder/@item.Id" class="btn btn-info">确认支付</a>
                }
            </td>
        </tr>
    }
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}



